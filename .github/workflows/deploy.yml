name: Deploy

on:
  workflow_dispatch:
  push:
    branches: [ "master" ]

jobs:
  build_backend:
    name: Build backend
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    - name: Set up JDK
      uses: actions/setup-java@v3
      with:
        java-version: '11'
        distribution: 'temurin'
        cache: gradle
    - name: Grant execute permission for gradlew
      run: chmod +x gradlew
    - name: Validate Gradle wrapper
      uses: gradle/wrapper-validation-action@v1
    - name: Build FatJar with Gradle
      uses: gradle/gradle-build-action@v2
      with:
        arguments: buildFatJar
      env:
        JWT_AUDIENCE: ${{ secrets.JWT_AUDIENCE }}
        JWT_SECRET: ${{ secrets.JWT_SECRET }}
        JWT_DOMAIN: ${{ secrets.JWT_DOMAIN }}
        JWT_REALM: ${{ secrets.JWT_REALM }}
        GAMES_DIR: ${{ secrets.GAMES_DIR }}
        GAMES_MAGNET_URI: ${{ secrets.GAMES_MAGNET_URI }}
        CLIENT_ADDRESS: ${{ secrets.CLIENT_ADDRESS }}
    - name: Deploy app to Heroku
      uses: akhileshns/heroku-deploy@v3.13.15
      with:
        heroku_api_key: ${{ secrets.HEROKU_API_KEY }}
        heroku_app_name: "agg2"
        heroku_email: "dkuzmichn1ce@gmail.com"
        procfile: "java: -Dserver.port=$PORT $JAVA_OPTS -jar fat.jar"
        appdir: "backend/build/libs"
  build_frontend:
    name: Build frontend
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Set up JDK
        uses: actions/setup-java@v3
        with:
          java-version: '11'
          distribution: 'temurin'
          cache: gradle
      - name: Grant execute permission for gradlew
        run: chmod +x gradlew
      - name: Validate Gradle wrapper
        uses: gradle/wrapper-validation-action@v1
      - name: Build JS artifacts
        uses: gradle/gradle-build-action@v2
        with:
          arguments: wasmJsBrowserWebpack
        env:
          SERVER_ADDRESS: ${{ secrets.SERVER_ADDRESS }}
      - name: Upload Pages artifact
        uses: actions/upload-pages-artifact@v3.0.0
        with:
          path: web/build/dist/wasmJs/productionExecutable
  deploy_frontend:
    name: Deploy frontend to Pages
    runs-on: ubuntu-latest
    needs: build_frontend
    permissions:
      pages: write
      id-token: write
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    steps:
      - name: Deploy to Github Pages
        id: deployment
        uses: actions/deploy-pages@v4
